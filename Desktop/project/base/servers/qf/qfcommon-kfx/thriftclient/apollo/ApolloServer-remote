#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from apollo import ApolloServer
from apollo.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  void ping()')
  print('  i64 preRegister(string username, string password, string email)')
  print('  i64 registerUser(UserProfile userProfile)')
  print('  i64 registerUserWithAllInfo(RegisterAllInfo registerAllInfo)')
  print('  i64 registerUserWithRecommend(UserProfile userProfile, i64 recommenduid, RecommendType recommendtype)')
  print('  i64 user_signup(string params)')
  print('  i64 user_edit(i64 userid, string params)')
  print('  i32 changePwd(i64 uid, string password)')
  print('  i64 setUserState(i64 uid, i64 state)')
  print('  i32 updateBankInfo(i64 uid, BankInfo bankinfo)')
  print('  i32 updateUser(i64 uid, User user)')
  print('  i32 checkUser(string mobile, string password)')
  print('  i32 checkUsername(string username, string password)')
  print('  i32 checkByUid(i64 uid, string password)')
  print('  User findUserByid(i64 uid)')
  print('   findUserByShopname(string shopname, i64 groupid)')
  print('  i32 setUserTag(i64 uid, UserTag usertag)')
  print('   getUserTagContents( uids, string tagname)')
  print('   findUserBriefs(string spec)')
  print('  UserBrief findUserBriefById(i64 uid)')
  print('   findUserBriefsByIds( uids)')
  print('  User findUserByMobile(string mobile)')
  print('  UserProfile findUserProfileByid(i64 uid)')
  print('  i32 findUserCount(UserQuery q)')
  print('   findUsers(UserQuery q)')
  print('   findUserIds(UserQuery q)')
  print('   findUserIdsEx(string q, string mode)')
  print('   getUserServices(i64 uid, i32 status)')
  print('  i32 getUserServiceStatus(i64 uid, string service_code)')
  print('   getAllUserServices( uids)')
  print('   setUserServices(i64 uid,  userServices)')
  print('  i32 setUsersService( uids, UserService userServices)')
  print('   setUserCategory(i64 uid,  userCategory)')
  print('  i32 setUsersCategory( uids,  userCategory)')
  print('  i32 setCategoryByCode(string cate_code, UserCate userCategory)')
  print('   getUserCategory(i64 uid, string spec)')
  print('   getUsersCategory( uids, string spec)')
  print('   getRelationDict( uids, string link_cate)')
  print('   getUserRelation(i64 userid, string link_cate)')
  print('   getUserReverseRelation(i64 userid, string link_cate)')
  print('   getReverseRelations( uids, string link_cate)')
  print('   setUserRelation(i64 userid,  relations)')
  print('  i32 unbindRelation(i64 userid, i64 link_id, string link_cate)')
  print('   getUserPermissionRole(i64 uid)')
  print('   getUserPermission(i64 uid)')
  print('   get_user_permissions(i64 userid)')
  print('  i32 checkUserPermission(i64 uid, string code)')
  print('  i32 addPermission(Permission p)')
  print('  i32 editPermission(Permission p)')
  print('  i32 addPermissionRole(PermissionRole r)')
  print('  i32 edit_permission_role(PermissionRole r, i32 status)')
  print('  i32 bindPermissionToRole(Permission p, PermissionRole r)')
  print('  i32 reset_permissions_of_role(string role_code,  perm_codes)')
  print('  i32 reset_role_of_user(i32 userid,  role_codes)')
  print('  i32 unbindPermissionToRole(Permission p, PermissionRole r)')
  print('  i32 bindUserToRole(i64 uid, PermissionRole r)')
  print('  i32 unbindUserToRole(i64 uid, PermissionRole r)')
  print('   findUserBriefsByName(string name, i64 groupid)')
  print('  UserExt getUserExt(i64 uid)')
  print('   getUserExts( uids)')
  print('  i32 bindUserExt(UserExt user_ext)')
  print('  i64 addOpuser(Opuser opuser)')
  print('  i32 changeOpuser(Opuser opuser)')
  print('   getOpusers(i64 userid,  opuid, string spec)')
  print('  i32 checkOpuserPwd(i64 userid, i64 opuid, string pwd)')
  print('  i32 changeUsername(i64 userid, string new_username)')
  print('  string get_wx_pay_info(i64 userid)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ApolloServer.Client(protocol)
transport.open()

if cmd == 'ping':
  if len(args) != 0:
    print('ping requires 0 args')
    sys.exit(1)
  pp.pprint(client.ping())

elif cmd == 'preRegister':
  if len(args) != 3:
    print('preRegister requires 3 args')
    sys.exit(1)
  pp.pprint(client.preRegister(args[0],args[1],args[2],))

elif cmd == 'registerUser':
  if len(args) != 1:
    print('registerUser requires 1 args')
    sys.exit(1)
  pp.pprint(client.registerUser(eval(args[0]),))

elif cmd == 'registerUserWithAllInfo':
  if len(args) != 1:
    print('registerUserWithAllInfo requires 1 args')
    sys.exit(1)
  pp.pprint(client.registerUserWithAllInfo(eval(args[0]),))

elif cmd == 'registerUserWithRecommend':
  if len(args) != 3:
    print('registerUserWithRecommend requires 3 args')
    sys.exit(1)
  pp.pprint(client.registerUserWithRecommend(eval(args[0]),eval(args[1]),eval(args[2]),))

elif cmd == 'user_signup':
  if len(args) != 1:
    print('user_signup requires 1 args')
    sys.exit(1)
  pp.pprint(client.user_signup(args[0],))

elif cmd == 'user_edit':
  if len(args) != 2:
    print('user_edit requires 2 args')
    sys.exit(1)
  pp.pprint(client.user_edit(eval(args[0]),args[1],))

elif cmd == 'changePwd':
  if len(args) != 2:
    print('changePwd requires 2 args')
    sys.exit(1)
  pp.pprint(client.changePwd(eval(args[0]),args[1],))

elif cmd == 'setUserState':
  if len(args) != 2:
    print('setUserState requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUserState(eval(args[0]),eval(args[1]),))

elif cmd == 'updateBankInfo':
  if len(args) != 2:
    print('updateBankInfo requires 2 args')
    sys.exit(1)
  pp.pprint(client.updateBankInfo(eval(args[0]),eval(args[1]),))

elif cmd == 'updateUser':
  if len(args) != 2:
    print('updateUser requires 2 args')
    sys.exit(1)
  pp.pprint(client.updateUser(eval(args[0]),eval(args[1]),))

elif cmd == 'checkUser':
  if len(args) != 2:
    print('checkUser requires 2 args')
    sys.exit(1)
  pp.pprint(client.checkUser(args[0],args[1],))

elif cmd == 'checkUsername':
  if len(args) != 2:
    print('checkUsername requires 2 args')
    sys.exit(1)
  pp.pprint(client.checkUsername(args[0],args[1],))

elif cmd == 'checkByUid':
  if len(args) != 2:
    print('checkByUid requires 2 args')
    sys.exit(1)
  pp.pprint(client.checkByUid(eval(args[0]),args[1],))

elif cmd == 'findUserByid':
  if len(args) != 1:
    print('findUserByid requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserByid(eval(args[0]),))

elif cmd == 'findUserByShopname':
  if len(args) != 2:
    print('findUserByShopname requires 2 args')
    sys.exit(1)
  pp.pprint(client.findUserByShopname(args[0],eval(args[1]),))

elif cmd == 'setUserTag':
  if len(args) != 2:
    print('setUserTag requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUserTag(eval(args[0]),eval(args[1]),))

elif cmd == 'getUserTagContents':
  if len(args) != 2:
    print('getUserTagContents requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserTagContents(eval(args[0]),args[1],))

elif cmd == 'findUserBriefs':
  if len(args) != 1:
    print('findUserBriefs requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserBriefs(args[0],))

elif cmd == 'findUserBriefById':
  if len(args) != 1:
    print('findUserBriefById requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserBriefById(eval(args[0]),))

elif cmd == 'findUserBriefsByIds':
  if len(args) != 1:
    print('findUserBriefsByIds requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserBriefsByIds(eval(args[0]),))

elif cmd == 'findUserByMobile':
  if len(args) != 1:
    print('findUserByMobile requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserByMobile(args[0],))

elif cmd == 'findUserProfileByid':
  if len(args) != 1:
    print('findUserProfileByid requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserProfileByid(eval(args[0]),))

elif cmd == 'findUserCount':
  if len(args) != 1:
    print('findUserCount requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserCount(eval(args[0]),))

elif cmd == 'findUsers':
  if len(args) != 1:
    print('findUsers requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUsers(eval(args[0]),))

elif cmd == 'findUserIds':
  if len(args) != 1:
    print('findUserIds requires 1 args')
    sys.exit(1)
  pp.pprint(client.findUserIds(eval(args[0]),))

elif cmd == 'findUserIdsEx':
  if len(args) != 2:
    print('findUserIdsEx requires 2 args')
    sys.exit(1)
  pp.pprint(client.findUserIdsEx(args[0],args[1],))

elif cmd == 'getUserServices':
  if len(args) != 2:
    print('getUserServices requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserServices(eval(args[0]),eval(args[1]),))

elif cmd == 'getUserServiceStatus':
  if len(args) != 2:
    print('getUserServiceStatus requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserServiceStatus(eval(args[0]),args[1],))

elif cmd == 'getAllUserServices':
  if len(args) != 1:
    print('getAllUserServices requires 1 args')
    sys.exit(1)
  pp.pprint(client.getAllUserServices(eval(args[0]),))

elif cmd == 'setUserServices':
  if len(args) != 2:
    print('setUserServices requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUserServices(eval(args[0]),eval(args[1]),))

elif cmd == 'setUsersService':
  if len(args) != 2:
    print('setUsersService requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUsersService(eval(args[0]),eval(args[1]),))

elif cmd == 'setUserCategory':
  if len(args) != 2:
    print('setUserCategory requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUserCategory(eval(args[0]),eval(args[1]),))

elif cmd == 'setUsersCategory':
  if len(args) != 2:
    print('setUsersCategory requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUsersCategory(eval(args[0]),eval(args[1]),))

elif cmd == 'setCategoryByCode':
  if len(args) != 2:
    print('setCategoryByCode requires 2 args')
    sys.exit(1)
  pp.pprint(client.setCategoryByCode(args[0],eval(args[1]),))

elif cmd == 'getUserCategory':
  if len(args) != 2:
    print('getUserCategory requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserCategory(eval(args[0]),args[1],))

elif cmd == 'getUsersCategory':
  if len(args) != 2:
    print('getUsersCategory requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUsersCategory(eval(args[0]),args[1],))

elif cmd == 'getRelationDict':
  if len(args) != 2:
    print('getRelationDict requires 2 args')
    sys.exit(1)
  pp.pprint(client.getRelationDict(eval(args[0]),args[1],))

elif cmd == 'getUserRelation':
  if len(args) != 2:
    print('getUserRelation requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserRelation(eval(args[0]),args[1],))

elif cmd == 'getUserReverseRelation':
  if len(args) != 2:
    print('getUserReverseRelation requires 2 args')
    sys.exit(1)
  pp.pprint(client.getUserReverseRelation(eval(args[0]),args[1],))

elif cmd == 'getReverseRelations':
  if len(args) != 2:
    print('getReverseRelations requires 2 args')
    sys.exit(1)
  pp.pprint(client.getReverseRelations(eval(args[0]),args[1],))

elif cmd == 'setUserRelation':
  if len(args) != 2:
    print('setUserRelation requires 2 args')
    sys.exit(1)
  pp.pprint(client.setUserRelation(eval(args[0]),eval(args[1]),))

elif cmd == 'unbindRelation':
  if len(args) != 3:
    print('unbindRelation requires 3 args')
    sys.exit(1)
  pp.pprint(client.unbindRelation(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'getUserPermissionRole':
  if len(args) != 1:
    print('getUserPermissionRole requires 1 args')
    sys.exit(1)
  pp.pprint(client.getUserPermissionRole(eval(args[0]),))

elif cmd == 'getUserPermission':
  if len(args) != 1:
    print('getUserPermission requires 1 args')
    sys.exit(1)
  pp.pprint(client.getUserPermission(eval(args[0]),))

elif cmd == 'get_user_permissions':
  if len(args) != 1:
    print('get_user_permissions requires 1 args')
    sys.exit(1)
  pp.pprint(client.get_user_permissions(eval(args[0]),))

elif cmd == 'checkUserPermission':
  if len(args) != 2:
    print('checkUserPermission requires 2 args')
    sys.exit(1)
  pp.pprint(client.checkUserPermission(eval(args[0]),args[1],))

elif cmd == 'addPermission':
  if len(args) != 1:
    print('addPermission requires 1 args')
    sys.exit(1)
  pp.pprint(client.addPermission(eval(args[0]),))

elif cmd == 'editPermission':
  if len(args) != 1:
    print('editPermission requires 1 args')
    sys.exit(1)
  pp.pprint(client.editPermission(eval(args[0]),))

elif cmd == 'addPermissionRole':
  if len(args) != 1:
    print('addPermissionRole requires 1 args')
    sys.exit(1)
  pp.pprint(client.addPermissionRole(eval(args[0]),))

elif cmd == 'edit_permission_role':
  if len(args) != 2:
    print('edit_permission_role requires 2 args')
    sys.exit(1)
  pp.pprint(client.edit_permission_role(eval(args[0]),eval(args[1]),))

elif cmd == 'bindPermissionToRole':
  if len(args) != 2:
    print('bindPermissionToRole requires 2 args')
    sys.exit(1)
  pp.pprint(client.bindPermissionToRole(eval(args[0]),eval(args[1]),))

elif cmd == 'reset_permissions_of_role':
  if len(args) != 2:
    print('reset_permissions_of_role requires 2 args')
    sys.exit(1)
  pp.pprint(client.reset_permissions_of_role(args[0],eval(args[1]),))

elif cmd == 'reset_role_of_user':
  if len(args) != 2:
    print('reset_role_of_user requires 2 args')
    sys.exit(1)
  pp.pprint(client.reset_role_of_user(eval(args[0]),eval(args[1]),))

elif cmd == 'unbindPermissionToRole':
  if len(args) != 2:
    print('unbindPermissionToRole requires 2 args')
    sys.exit(1)
  pp.pprint(client.unbindPermissionToRole(eval(args[0]),eval(args[1]),))

elif cmd == 'bindUserToRole':
  if len(args) != 2:
    print('bindUserToRole requires 2 args')
    sys.exit(1)
  pp.pprint(client.bindUserToRole(eval(args[0]),eval(args[1]),))

elif cmd == 'unbindUserToRole':
  if len(args) != 2:
    print('unbindUserToRole requires 2 args')
    sys.exit(1)
  pp.pprint(client.unbindUserToRole(eval(args[0]),eval(args[1]),))

elif cmd == 'findUserBriefsByName':
  if len(args) != 2:
    print('findUserBriefsByName requires 2 args')
    sys.exit(1)
  pp.pprint(client.findUserBriefsByName(args[0],eval(args[1]),))

elif cmd == 'getUserExt':
  if len(args) != 1:
    print('getUserExt requires 1 args')
    sys.exit(1)
  pp.pprint(client.getUserExt(eval(args[0]),))

elif cmd == 'getUserExts':
  if len(args) != 1:
    print('getUserExts requires 1 args')
    sys.exit(1)
  pp.pprint(client.getUserExts(eval(args[0]),))

elif cmd == 'bindUserExt':
  if len(args) != 1:
    print('bindUserExt requires 1 args')
    sys.exit(1)
  pp.pprint(client.bindUserExt(eval(args[0]),))

elif cmd == 'addOpuser':
  if len(args) != 1:
    print('addOpuser requires 1 args')
    sys.exit(1)
  pp.pprint(client.addOpuser(eval(args[0]),))

elif cmd == 'changeOpuser':
  if len(args) != 1:
    print('changeOpuser requires 1 args')
    sys.exit(1)
  pp.pprint(client.changeOpuser(eval(args[0]),))

elif cmd == 'getOpusers':
  if len(args) != 3:
    print('getOpusers requires 3 args')
    sys.exit(1)
  pp.pprint(client.getOpusers(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'checkOpuserPwd':
  if len(args) != 3:
    print('checkOpuserPwd requires 3 args')
    sys.exit(1)
  pp.pprint(client.checkOpuserPwd(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'changeUsername':
  if len(args) != 2:
    print('changeUsername requires 2 args')
    sys.exit(1)
  pp.pprint(client.changeUsername(eval(args[0]),args[1],))

elif cmd == 'get_wx_pay_info':
  if len(args) != 1:
    print('get_wx_pay_info requires 1 args')
    sys.exit(1)
  pp.pprint(client.get_wx_pay_info(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
